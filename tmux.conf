# Get pane breaks displayed correctly when using mosh
#set-option -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'

# Switch me back to ^A, thanks
set-option -g prefix C-a
unbind-key C-b
bind-key a send-prefix

# I miss ^A^A and ^ASpace
bind-key C-a last-window
bind-key Space next-window
bind-key C-Space previous-window

# Allow page up and page down to scroll through tmux buffer
bind -n Pageup copy-mode -u

# Options
set-option -sg escape-time 50  # this makes vim fucking awful to use
set-option -g base-index 1
set-option -g default-terminal screen-256color
set-option -g lock-command vlock
set-window-option -g xterm-keys on  # to make ctrl-arrow, etc. work

set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #H] #W'  # use screen title

# COLORS.
# For reference, the xterm color cube points are: 00, 5F, 87, AF, D7, FF
# Status bar has a dim gray background
set-option -g status-bg colour234
set-option -g status-fg colour0
# Left shows the session name, in blue
set-option -g status-left-bg default
set-option -g status-left-fg colour74
# Right is some CPU stats, so terminal green
set-option -g status-right-bg default
set-option -g status-right-fg colour71
# Windows are medium gray; current window is white
set-window-option -g window-status-fg colour244
set-window-option -g window-status-current-fg '#ffffff'
set-window-option -g window-status-current-bg '#000000'
# Beeped windows get a blinding orange background
set-window-option -g window-status-bell-fg '#000000'
set-window-option -g window-status-bell-bg '#d78700'
set-window-option -g window-status-bell-attr none
# Trim window titles to a reasonable length
#set-window-option -g window-status-format '#[fg=yellow]#F#I#[default] #32W '
#set-window-option -g window-status-current-format '#[fg=yellow] #I#[default] #32W '

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use vim keybindings in copy mode
setw -g mode-keys vi

# vim copy mode
setw -g mode-keys vi
bind [ copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy V rectangle-toggle
bind -t vi-copy Escape cancel
bind ] paste-buffer

# Native clipboard access to paste in and out of tmux
# bind-key 'p' run-shell "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# For tmux on remote ssh (with pbcopy tunnel setup http://seancoates.com/blogs/remote-pbcopy)
# bind-key 'y' run-shell "tmux save-buffer - | pbcopy"\; display-message "Copied"

# For local tmux, use this one (with reattach-to-user-namespace installed)
bind-key 'y' run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"\; display-message "Copied"

# Instructs tmux to use the system clipboard (for local tmux sessions)
set-option -g default-command "reattach-to-user-namespace -l bash"

# buffer
# bind Space choose-buffer

# Mouse select pane
#set -g mouse-select-pane on

# Scroll wheel enabling
# note: this causes some weird copy/paste buffer behvior, but if you hold down the option key, native mac os copy/paste is restored
#set -g mode-mouse on

# Reload config
bind-key 'r' source-file ~/.tmux.conf\; display-message "Config reloaded."

# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Retain C-l and C-k readline functionality with tmux leader usage
bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-urlview        \
 '
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
